<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/UIButton+WebCache.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/UIButton(WebCache)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url and a placeholder.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:placeholderImage:options:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)setImageWithURL:(NSURL *)url placeholderImage:(UIImage *)placeholder</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:placeholderImage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:placeholderImage:options:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url, placeholder and custom options.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url placeholderImage:(UIImage *)placeholder options:(SDWebImageOptions)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to use when downloading the image. @see SDWebImageOptions for the possible values.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:placeholderImage:options:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:success:failure:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url success:(void ( ^ ) ( UIImage *image ))success failure:(void ( ^ ) ( NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block to be executed when the image request succeed This block has no return value and takes the retrieved image as argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the image request failed. This block has no return value and takes the error object describing the network or parsing error that occurred (may be nil).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:placeholderImage:success:failure:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url, placeholder.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url placeholderImage:(UIImage *)placeholder success:(void ( ^ ) ( UIImage *image ))success failure:(void ( ^ ) ( NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block to be executed when the image request succeed This block has no return value and takes the retrieved image as argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the image request failed. This block has no return value and takes the error object describing the network or parsing error that occurred (may be nil).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:placeholderImage:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/setImageWithURL:placeholderImage:options:success:failure:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url, placeholder and custom options.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url placeholderImage:(UIImage *)placeholder options:(SDWebImageOptions)options success:(void ( ^ ) ( UIImage *image ))success failure:(void ( ^ ) ( NSError *error ))failure</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to use when downloading the image. @see SDWebImageOptions for the possible values.</Abstract>
				</Parameter><Parameter>
					<Name>success</Name>
					<Abstract type="html">A block to be executed when the image request succeed This block has no return value and takes the retrieved image as argument.</Abstract>
				</Parameter><Parameter>
					<Name>failure</Name>
					<Abstract type="html">A block object to be executed when the image request failed. This block has no return value and takes the error object describing the network or parsing error that occurred (may be nil).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:placeholderImage:options:success:failure:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIButton(WebCache)/cancelCurrentImageLoad</TokenIdentifier>
			<Abstract type="html">Cancel the current download</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>			
			
			<Declaration>- (void)cancelCurrentImageLoad</Declaration>
			
			
			<Anchor>//api/name/cancelCurrentImageLoad</Anchor>
		</Token>
		
	</File>
</Tokens>